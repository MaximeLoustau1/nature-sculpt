{"ast":null,"code":"var _jsxFileName = \"/Users/maximeloustau/Desktop/nature-sculpt/src/components/Toggler.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Toggle() {\n  _s();\n  const [languageOption, setlanguageOption] = useState('EN');\n  function toggleLanguage() {\n    if (language === 'EN') {\n      setLanguage('FR');\n      setlanguageOption('EN');\n    } else {\n      setLanguage('EN');\n      setlanguageOption('FR');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-toggler\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"languages transparent-btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"english-button\",\n        children: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleLanguage,\n        className: \"french-button\",\n        children: languageOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Toggle, \"bc2CvCg+0MlklC+NhH9gX1T3waE=\");\n_c = Toggle;\nexport default Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Toggle","_s","languageOption","setlanguageOption","toggleLanguage","language","setLanguage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/maximeloustau/Desktop/nature-sculpt/src/components/Toggler.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\nfunction Toggle() {\n    const [languageOption, setlanguageOption] = useState('EN');\n\n    function toggleLanguage() {\n        if (language === 'EN') {\n            setLanguage('FR');\n            setlanguageOption('EN');\n        }\n        else {\n            setLanguage('EN');\n            setlanguageOption('FR');\n        }\n    }\n\n    return(\n        <div className=\"language-toggler\">\n            <p className=\"languages transparent-btn\">\n                <span className=\"english-button\">{language}</span> | <span onClick={toggleLanguage}className=\"french-button\">{languageOption}</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Toggle"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE1D,SAASO,cAAcA,CAAA,EAAG;IACtB,IAAIC,QAAQ,KAAK,IAAI,EAAE;MACnBC,WAAW,CAAC,IAAI,CAAC;MACjBH,iBAAiB,CAAC,IAAI,CAAC;IAC3B,CAAC,MACI;MACDG,WAAW,CAAC,IAAI,CAAC;MACjBH,iBAAiB,CAAC,IAAI,CAAC;IAC3B;EACJ;EAEA,oBACIJ,OAAA;IAAKQ,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BT,OAAA;MAAGQ,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACpCT,OAAA;QAAMQ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEH;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,OAAG,eAAAb,OAAA;QAAMc,OAAO,EAAET,cAAe;QAAAG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACX,EAAA,CArBQD,MAAM;AAAAc,EAAA,GAANd,MAAM;AAuBf,eAAeA,MAAM;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}