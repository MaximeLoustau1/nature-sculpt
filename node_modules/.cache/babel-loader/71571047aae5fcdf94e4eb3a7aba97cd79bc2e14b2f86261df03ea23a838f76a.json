{"ast":null,"code":"import React from'react';import'../styles/Navbar.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Toggler(_ref){let{language,setLanguage}=_ref;const toggleLanguage=()=>{setLanguage(language==='EN'?'FR':'EN');};return/*#__PURE__*/_jsx(\"section\",{className:\"toggler-section\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"english-button\",children:language==='EN'?'EN':'FR'}),\" | \",/*#__PURE__*/_jsx(\"span\",{onClick:toggleLanguage,className:\"french-button\",children:language==='EN'?'FR':'EN'})]})});}export default Toggler;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Toggler","_ref","language","setLanguage","toggleLanguage","className","children","onClick"],"sources":["/Users/maximeloustau/Desktop/new-nature-sculpt/nature-sculpt/src/components/Toggler.jsx"],"sourcesContent":["import React from 'react';\nimport '../styles/Navbar.scss';\n\nfunction Toggler({ language, setLanguage }) {\n    const toggleLanguage = () => {\n        setLanguage(language === 'EN' ? 'FR' : 'EN');\n    };\n\n    return (\n        <section className=\"toggler-section\">\n            <p>\n                <span className=\"english-button\">{language === 'EN' ? 'EN' : 'FR'}</span> | <span onClick={toggleLanguage} className=\"french-button\">\n                    {language === 'EN' ? 'FR' : 'EN'}\n                </span>\n            </p>\n        </section>\n    );\n}\n\nexport default Toggler;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,QAAS,CAAAC,OAAOA,CAAAC,IAAA,CAA4B,IAA3B,CAAEC,QAAQ,CAAEC,WAAY,CAAC,CAAAF,IAAA,CACtC,KAAM,CAAAG,cAAc,CAAGA,CAAA,GAAM,CACzBD,WAAW,CAACD,QAAQ,GAAK,IAAI,CAAG,IAAI,CAAG,IAAI,CAAC,CAChD,CAAC,CAED,mBACIL,IAAA,YAASQ,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAChCP,KAAA,MAAAO,QAAA,eACIT,IAAA,SAAMQ,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEJ,QAAQ,GAAK,IAAI,CAAG,IAAI,CAAG,IAAI,CAAO,CAAC,MAAG,cAAAL,IAAA,SAAMU,OAAO,CAAEH,cAAe,CAACC,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC/HJ,QAAQ,GAAK,IAAI,CAAG,IAAI,CAAG,IAAI,CAC9B,CAAC,EACR,CAAC,CACC,CAAC,CAElB,CAEA,cAAe,CAAAF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}